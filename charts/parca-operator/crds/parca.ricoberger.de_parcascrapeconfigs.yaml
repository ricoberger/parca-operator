---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: parcascrapeconfigs.parca.ricoberger.de
spec:
  group: parca.ricoberger.de
  names:
    kind: ParcaScrapeConfig
    listKind: ParcaScrapeConfigList
    plural: parcascrapeconfigs
    singular: parcascrapeconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Indicates if the Parca scrape configuration was updated successfully
      jsonPath: .status.conditions[?(@.type=="ParcaScrapeConfigReconciled")].status
      name: Succeeded
      type: string
    - description: Reason for the current status
      jsonPath: .status.conditions[?(@.type=="ParcaScrapeConfigReconciled")].reason
      name: Reason
      type: string
    - description: Message with more information, regarding the current status
      jsonPath: .status.conditions[?(@.type=="ParcaScrapeConfigReconciled")].message
      name: Message
      type: string
    - description: Time when the condition was updated the last time
      jsonPath: .status.conditions[?(@.type=="ParcaScrapeConfigReconciled")].lastTransitionTime
      name: Last Transition
      type: date
    - description: Time when this ParcaScrapeConfigration was updated the last time
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ParcaScrapeConfig is the Schema for the parcascrapeconfigs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ParcaScrapeConfigSpec defines the desired state of ParcaScrapeConfig
            properties:
              port:
                description: port is the port of the targets which is used to expose
                  the HTTP endpoints.
                format: int32
                type: integer
              scrapeConfig:
                description: scrapeConfig is the scrape configuration as it can be
                  set in the Parca configuration.
                properties:
                  job_name:
                    description: |-
                      job_name is the name of the section in the configurtion. If no job_name is provided, it will be automatically
                      generated based on the name and namespace of the CR: "namespace.name"
                    type: string
                  normalized_addresses:
                    description: normalized_addresses can be set to true if the addresses
                      returned by the endpoints have already been normalized.
                    type: boolean
                  params:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: params is a set of query parameters with which the
                      target is scraped.
                    type: object
                  profiling_config:
                    description: |-
                      profiling_config defines the profiling config for the targets, see
                      https://www.parca.dev/docs/ingestion#pull-based for more information.
                    properties:
                      path_prefix:
                        type: string
                      pprof_config:
                        additionalProperties:
                          properties:
                            delta:
                              type: boolean
                            enabled:
                              type: boolean
                            path:
                              type: string
                          type: object
                        type: object
                    type: object
                  relabel_configs:
                    description: |-
                      relabel_configs allows dynamic rewriting of the label set for the targets. See
                      https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config for more information.
                    items:
                      description: |-
                        RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write
                        samples.
                      properties:
                        action:
                          default: replace
                          description: |-
                            Action to perform based on the regex matching.


                            `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
                            `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.


                            Default: "Replace"
                          enum:
                          - replace
                          - Replace
                          - keep
                          - Keep
                          - drop
                          - Drop
                          - hashmod
                          - HashMod
                          - labelmap
                          - LabelMap
                          - labeldrop
                          - LabelDrop
                          - labelkeep
                          - LabelKeep
                          - lowercase
                          - Lowercase
                          - uppercase
                          - Uppercase
                          - keepequal
                          - KeepEqual
                          - dropequal
                          - DropEqual
                          type: string
                        modulus:
                          description: |-
                            Modulus to take of the hash of the source label values.


                            Only applicable when the action is `HashMod`.
                          format: int64
                          type: integer
                        regex:
                          description: Regular expression against which the extracted
                            value is matched.
                          type: string
                        replacement:
                          description: |-
                            Replacement value against which a Replace action is performed if the regular expression matches.


                            Regex capture groups are available.
                          type: string
                        separator:
                          description: Separator is the string between concatenated
                            SourceLabels.
                          type: string
                        source_labels:
                          description: |-
                            The source labels select values from existing labels. Their content is concatenated using the configured
                            Separator and matched against the configured regular expression.
                          items:
                            description: LabelName is a valid Prometheus label name
                              which may only contain ASCII letters, numbers, as well
                              as underscores.
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                            type: string
                          type: array
                        target_label:
                          description: |-
                            Label to which the resulting string is written in a replacement.


                            It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` and `DropEqual` actions.


                            Regex capture groups are available.
                          type: string
                      type: object
                    type: array
                  scheme:
                    description: schema sets the URL scheme with which to fetch metrics
                      from targets.
                    type: string
                  scrape_interval:
                    description: scrape_interval defines how frequently to scrape
                      the targets of this scrape config.
                    pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                    type: string
                  scrape_timeout:
                    description: scrape_timeout defines the timeout for scraping targets
                      of this config.
                    pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                    type: string
                  static_configs:
                    items:
                      properties:
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        targets:
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
              selector:
                description: selector is the selector for the Pods which should be
                  scraped by Parca.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            required:
            - selector
            type: object
          status:
            description: ParcaScrapeConfigStatus defines the observed state of ParcaScrapeConfig
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              podIPs:
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
